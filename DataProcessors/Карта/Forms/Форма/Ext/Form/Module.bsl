
&НаКлиенте
Процедура ЯзыкНажатие(Элемент)
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить("RU");
	СписокЗначений.Добавить("DE");
	СписокЗначений.Добавить("CZ");
	ПоказатьВыборИзМеню(Новый ОписаниеОповещения("Перевести", ЭтаФорма), СписокЗначений, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Перевести(Элемент, ДополнительныеПараметры) Экспорт
	
	Язык = Элемент.Значение;
	Переводы = Новый Соответствие;
	
	RU_Показатель = Новый Соответствие;
	RU_Показатель.Вставить("Потенциал","Потенциал");
	RU_Показатель.Вставить("План","План");
	RU_Показатель.Вставить("Факт","Факт");
	
	RU_Группировка = Новый Соответствие;
	RU_Группировка.Вставить("Продукция","Продукция");
	RU_Группировка.Вставить("Клиенты","Клиенты");
	RU_Группировка.Вставить("Менеджеры","Менеджеры");
	
	RU = Новый Соответствие;
	
	Переводы.Вставить("RU_Показатель",  RU_Показатель);
	Переводы.Вставить("RU_Группировка", RU_Группировка);
	
	RU.Вставить(Элементы.Отчеты,"Отчеты");
	RU.Вставить(Элементы.ГруппаПланПродаж,"План продаж");
	RU.Вставить(Элементы.ФормаОтчетПланФактныйАнализПродажОткрыть,"План фактный анализ продаж");
	RU.Вставить(Элементы.ГруппаАналитика,"Аналитика");
	RU.Вставить(Элементы.ФормаОтчетСводПоПотенциалуОткрыть,"Свод по потенциалу");
	RU.Вставить(Элементы.ФормаВаловаяПрибыльПредприятия,"Валовая прибыль предприятия");
	RU.Вставить(Элементы.ГруппаКлиенты,"Клиенты");
	RU.Вставить(Элементы.ФормаОбработкаCCRM_КалендарьОткрыть,"Календарь");
	RU.Вставить(Элементы.ФормаОбработкаОтношенияС_ПКОткрыть,"Отношения с ПК");
	RU.Вставить(Элементы.ФормаОтчетОтношенияС_НК_СКОткрыть,"Отношения с НК, СК");
	RU.Вставить(Элементы.ГруппаМаркетинг,"Маркетинг");
	RU.Вставить(Элементы.ФормаМаркетинговыеМероприятия,"Маркетинговые мероприятия");

	DE_Показатель = Новый Соответствие;
	DE_Показатель.Вставить("Потенциал","Potenzial");
	DE_Показатель.Вставить("План","Plan");
	DE_Показатель.Вставить("Факт","Fakt");
	
	DE_Группировка = Новый Соответствие;
	DE_Группировка.Вставить("Продукция","Produkte");
	DE_Группировка.Вставить("Клиенты","Kuneden");
	DE_Группировка.Вставить("Менеджеры","Manager");
	
	DE = Новый Соответствие;
	
	Переводы.Вставить("DE_Показатель",  DE_Показатель);
	Переводы.Вставить("DE_Группировка", DE_Группировка);
	
	DE.Вставить(Элементы.Отчеты,"Berichte");
	DE.Вставить(Элементы.ГруппаПланПродаж,"Verkaufsprogramm ");
	DE.Вставить(Элементы.ФормаОтчетПланФактныйАнализПродажОткрыть,"Plan / Umsatz-Ist-Analyse");
	DE.Вставить(Элементы.ГруппаАналитика,"Analytik");
	DE.Вставить(Элементы.ФормаОтчетСводПоПотенциалуОткрыть,"Auf das Potential vermindert");
	DE.Вставить(Элементы.ФормаВаловаяПрибыльПредприятия,"Der Bruttogewinn des Unternehmens");
	DE.Вставить(Элементы.ГруппаКлиенты,"Kunden");
	DE.Вставить(Элементы.ФормаОбработкаCCRM_КалендарьОткрыть,"Kalender");
	DE.Вставить(Элементы.ФормаОбработкаОтношенияС_ПКОткрыть,"Beziehungen mit potenziellen Kunden");
	DE.Вставить(Элементы.ФормаОтчетОтношенияС_НК_СКОткрыть,"Beziehungen mit neuen und bestehenden Kunden");
	DE.Вставить(Элементы.ГруппаМаркетинг,"Marketing");
	DE.Вставить(Элементы.ФормаМаркетинговыеМероприятия,"Marketing-Events");
	
	CZ_Показатель = Новый Соответствие;
	CZ_Показатель.Вставить("Потенциал","Potenciál");
	CZ_Показатель.Вставить("План","Plán");
	CZ_Показатель.Вставить("Факт","Fakt");
	
	CZ_Группировка = Новый Соответствие;
	CZ_Группировка.Вставить("Продукция","Produkty");
	CZ_Группировка.Вставить("Клиенты","Klienti");
	CZ_Группировка.Вставить("Менеджеры","Manažerů");
	
	CZ = Новый Соответствие;
	
	Переводы.Вставить("CZ_Показатель",  CZ_Показатель);
	Переводы.Вставить("CZ_Группировка", CZ_Группировка);
	
	CZ.Вставить(Элементы.Отчеты,"zprávy");
	CZ.Вставить(Элементы.ГруппаПланПродаж,"Program prodejní");
	CZ.Вставить(Элементы.ФормаОтчетПланФактныйАнализПродажОткрыть,"Plán / tržby vs. skutečná analýza");
	CZ.Вставить(Элементы.ГруппаАналитика,"analytika");
	CZ.Вставить(Элементы.ФормаОтчетСводПоПотенциалуОткрыть,"Se redukuje na potenciálu");
	CZ.Вставить(Элементы.ФормаВаловаяПрибыльПредприятия,"Hrubý zisk podniku");
	CZ.Вставить(Элементы.ГруппаКлиенты,"klienti");
	CZ.Вставить(Элементы.ФормаОбработкаCCRM_КалендарьОткрыть,"kalendář");
	CZ.Вставить(Элементы.ФормаОбработкаОтношенияС_ПКОткрыть,"Vztahy s potenciálními zákazníky");
	CZ.Вставить(Элементы.ФормаОтчетОтношенияС_НК_СКОткрыть,"Vztahy s novým i stávajícím zákazníkům");
	CZ.Вставить(Элементы.ГруппаМаркетинг,"marketing");
	CZ.Вставить(Элементы.ФормаМаркетинговыеМероприятия,"marketingové akce");
	
	Переводы.Вставить("RU",RU);
	Переводы.Вставить("DE",DE);
	Переводы.Вставить("CZ",CZ);
	
	Элементы.Язык.Заголовок = Язык;
	Для Каждого Элемент Из Переводы[Язык] Цикл
		Элемент.Ключ.Заголовок = Элемент.Значение;
	КонецЦикла;
	
	Для Каждого ЭлементСпискаВыбора Из Элементы.Показатель.СписокВыбора Цикл
		ЭлементСпискаВыбора.Представление = Переводы[Язык+"_Показатель"][ЭлементСпискаВыбора.Значение];
	КонецЦикла;
	
	Для Каждого ЭлементСпискаВыбора Из Элементы.Группировка.СписокВыбора Цикл
		ЭлементСпискаВыбора.Представление = Переводы[Язык+"_Группировка"][ЭлементСпискаВыбора.Значение];
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Элементы.ГруппаКнопок.Доступность = ЗначениеЗаполнено(Период);
КонецПроцедуры

&НаСервере
Функция МенеджерЗадан(БизнесРегион)
	МЗ = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
	МЗ.Объект = БизнесРегион;
	МЗ.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Менеджер (Бизнес-регионы)");
	
	МЗ.Прочитать();
	
	Возврат ЗначениеЗаполнено(МЗ.Значение);
КонецФункции

&НаСервере
Функция ПолучитьДанные()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	БизнесРегионы.Родитель КАК ФО,
	|	БизнесРегионы.Ссылка КАК Регион,
	|	БизнесРегионы.ЗначениеГеографическогоРегиона КАК Значение,
	|	ЕСТЬNULL(ДополнительныеСведения.Значение, ЛОЖЬ) КАК ЦентрФО
	|ПОМЕСТИТЬ ВТ_Регионы
	|ИЗ
	|	Справочник.БизнесРегионы КАК БизнесРегионы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|		ПО БизнесРегионы.Ссылка = ДополнительныеСведения.Объект
	|			И (ДополнительныеСведения.Свойство.Заголовок = ""Центр ФО"")
	|			И (НЕ БизнесРегионы.Родитель = ЗНАЧЕНИЕ(Справочник.БизнесРегионы.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партнеры.Ссылка,
	|	ТоварныеКатегории.Наименование КАК ГруппаТоваров
	|ПОМЕСТИТЬ ВТ_Аналитика
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры,
	|	Справочник.ТоварныеКатегории КАК ТоварныеКатегории
	|ГДЕ
	|	Партнеры.Клиент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Партнеры.Ссылка,
	|	""Пусто""
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	Партнеры.Клиент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_1ГруппаКлиентов.Ссылка,
	|	_1ГруппаКлиентов.Значение КАК ГруппаКлиентов
	|ПОМЕСТИТЬ ВТ_Классификация
	|ИЗ
	|	Справочник.Партнеры.ДополнительныеРеквизиты КАК _1ГруппаКлиентов
	|ГДЕ
	|	_1ГруппаКлиентов.Свойство.Наименование = ""Группа клиентов (Клиенты)""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НеизвестныйПартнер),
	|	ЗначенияСвойствОбъектов.Ссылка
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец.Заголовок = ""Группа клиентов""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартнерыДополнительныеРеквизиты.Ссылка,
	|	ЕСТЬNULL(ПартнерыДополнительныеРеквизиты.Свойство.Заголовок, ""Пусто"") КАК ГруппаТоваров,
	|	ВЫРАЗИТЬ(СУММА((ВЫРАЗИТЬ(ЕСТЬNULL(ПартнерыДополнительныеРеквизиты.Значение, 0) КАК ЧИСЛО)) * 1000000) * (РАЗНОСТЬДАТ(&ДатаНачала, &ДатаТекущая, ДЕНЬ) + 1) / (РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ) + 1) КАК ЧИСЛО(10, 2)) КАК Потенциал
	|ПОМЕСТИТЬ ВТ_Потенциал
	|ИЗ
	|	Справочник.Партнеры.ДополнительныеРеквизиты КАК ПартнерыДополнительныеРеквизиты
	|ГДЕ
	|	ПартнерыДополнительныеРеквизиты.Ссылка.Клиент
	|	И ПОДСТРОКА(ПартнерыДополнительныеРеквизиты.Свойство.Комментарий, 1, 9) = ""Потенциал""
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ПартнерыДополнительныеРеквизиты.Свойство.Заголовок, ""Пусто""),
	|	ПартнерыДополнительныеРеквизиты.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаПоПартнерам.Партнер КАК Ссылка,
	|	ЕСТЬNULL(ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаНоменклатуры.Номенклатура.ТоварнаяКатегория.Наименование, ТоварныеКатегории.Наименование) КАК ГруппаТоваров,
	|	СУММА(ВыручкаИСебестоимостьПродажОбороты.СуммаВыручкиОборот) КАК Продажи
	|ПОМЕСТИТЬ ВТ_Продажи
	|ИЗ
	|	Справочник.ТоварныеКатегории КАК ТоварныеКатегории
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&ДатаНачала, &ДатаОкончания, , ) КАК ВыручкаИСебестоимостьПродажОбороты
	|		ПО (ТоварныеКатегории.Наименование = ВЫБОР
	|				КОГДА ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаНоменклатуры.Номенклатура.ТоварнаяКатегория.Наименование ЕСТЬ NULL 
	|					ТОГДА ""Пусто""
	|				ИНАЧЕ ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаНоменклатуры.Номенклатура.ТоварнаяКатегория.Наименование
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаПоПартнерам.Партнер,
	|	ЕСТЬNULL(ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаНоменклатуры.Номенклатура.ТоварнаяКатегория.Наименование, ТоварныеКатегории.Наименование)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Значение КАК Ссылка,
	|	ЕСТЬNULL(ПланПродажПоКатегориямТоварныеКатегории.ТоварнаяКатегория.Наименование, ТоварныеКатегории.Наименование) КАК ГруппаТоваров,
	|	ВЫРАЗИТЬ(СУММА(ПланПродажПоКатегориямТоварныеКатегории.Количество) * (РАЗНОСТЬДАТ(&ДатаНачала, &ДатаТекущая, ДЕНЬ) + 1) / (РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ) + 1) КАК ЧИСЛО(10, 2)) КАК План
	|ПОМЕСТИТЬ ВТ_План
	|ИЗ
	|	Справочник.ТоварныеКатегории КАК ТоварныеКатегории
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланПродажПоКатегориям.ТоварныеКатегории КАК ПланПродажПоКатегориямТоварныеКатегории
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|			ПО ПланПродажПоКатегориямТоварныеКатегории.Ссылка = ДополнительныеСведения.Объект
	|				И (ДополнительныеСведения.Свойство.Заголовок = ""Клиент"")
	|		ПО ТоварныеКатегории.Наименование = ПланПродажПоКатегориямТоварныеКатегории.ТоварнаяКатегория.Наименование
	|ГДЕ
	|	ПланПродажПоКатегориямТоварныеКатегории.Ссылка.НачалоПериода >= &ДатаНачала
	|	И ПланПродажПоКатегориямТоварныеКатегории.Ссылка.ОкончаниеПериода <= &ДатаОкончания
	|	И ПланПродажПоКатегориямТоварныеКатегории.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ДополнительныеСведения.Значение,
	|	ЕСТЬNULL(ПланПродажПоКатегориямТоварныеКатегории.ТоварнаяКатегория.Наименование, ТоварныеКатегории.Наименование)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_План.Ссылка, ВТ_Продажи.Ссылка) КАК Ссылка,
	|	ЕСТЬNULL(ВТ_План.ГруппаТоваров, ВТ_Продажи.ГруппаТоваров) КАК ГруппаТоваров,
	|	СУММА(ЕСТЬNULL(ВТ_План.План, 0)) КАК План,
	|	СУММА(ЕСТЬNULL(ВТ_Продажи.Продажи, 0)) КАК Факт
	|ПОМЕСТИТЬ ВТ_ПланФакт
	|ИЗ
	|	ВТ_План КАК ВТ_План
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Продажи КАК ВТ_Продажи
	|		ПО ВТ_План.Ссылка = ВТ_Продажи.Ссылка
	|			И ВТ_План.ГруппаТоваров = ВТ_Продажи.ГруппаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТ_План.Ссылка, ВТ_Продажи.Ссылка),
	|	ЕСТЬNULL(ВТ_План.ГруппаТоваров, ВТ_Продажи.ГруппаТоваров)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ВТ_Потенциал.Ссылка, ВТ_ПланФакт.Ссылка) КАК Ссылка,
	|	ЕСТЬNULL(ВТ_Потенциал.ГруппаТоваров, ВТ_ПланФакт.ГруппаТоваров) КАК ГруппаТоваров,
	|	СУММА(ЕСТЬNULL(ВТ_Потенциал.Потенциал, 0)) КАК Потенциал,
	|	СУММА(ЕСТЬNULL(ВТ_ПланФакт.План, 0)) КАК План,
	|	СУММА(ЕСТЬNULL(ВТ_ПланФакт.Факт, 0)) КАК Факт
	|ПОМЕСТИТЬ ВТ_ПланФактПотенциал
	|ИЗ
	|	ВТ_Потенциал КАК ВТ_Потенциал
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ПланФакт КАК ВТ_ПланФакт
	|		ПО ВТ_Потенциал.Ссылка = ВТ_ПланФакт.Ссылка
	|			И ВТ_Потенциал.ГруппаТоваров = ВТ_ПланФакт.ГруппаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТ_Потенциал.ГруппаТоваров, ВТ_ПланФакт.ГруппаТоваров),
	|	ЕСТЬNULL(ВТ_Потенциал.Ссылка, ВТ_ПланФакт.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Аналитика.Ссылка,
	|	ВТ_Аналитика.ГруппаТоваров,
	|	СУММА(ЕСТЬNULL(ВТ_ПланФактПотенциал.Потенциал, 0)) КАК Потенциал,
	|	СУММА(ЕСТЬNULL(ВТ_ПланФактПотенциал.План, 0)) КАК План,
	|	СУММА(ЕСТЬNULL(ВТ_ПланФактПотенциал.Факт, 0)) КАК Факт,
	|	NULL КАК ГруппаКлиентов
	|ПОМЕСТИТЬ ВТ_ПланФактПотенциалАналитика
	|ИЗ
	|	ВТ_Аналитика КАК ВТ_Аналитика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПланФактПотенциал КАК ВТ_ПланФактПотенциал
	|		ПО ВТ_Аналитика.Ссылка = ВТ_ПланФактПотенциал.Ссылка
	|			И ВТ_Аналитика.ГруппаТоваров = ВТ_ПланФактПотенциал.ГруппаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Аналитика.Ссылка,
	|	ВТ_Аналитика.ГруппаТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Аналитика.Ссылка,
	|	ВТ_Аналитика.ГруппаТоваров,
	|	0,
	|	0,
	|	0,
	|	ВТ_Классификация.ГруппаКлиентов
	|ИЗ
	|	ВТ_Аналитика КАК ВТ_Аналитика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Классификация КАК ВТ_Классификация
	|		ПО ВТ_Аналитика.Ссылка = ВТ_Классификация.Ссылка
	|			И (ВТ_Аналитика.Ссылка = ЗНАЧЕНИЕ(Справочник.Партнеры.НеизвестныйПартнер))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ВТ_ПланФактПотенциалАналитика.Ссылка.ОсновнойМенеджер.Наименование, ""Пусто"") КАК КАМ,
	|	ВТ_ПланФактПотенциалАналитика.Ссылка.БизнесРегион КАК Регион,
	|	ВТ_ПланФактПотенциалАналитика.ГруппаТоваров,
	|	ЕСТЬNULL(ВТ_Классификация.ГруппаКлиентов, ""Пусто"") КАК ГруппаКлиентов,
	|	СУММА(ЕСТЬNULL(ВТ_ПланФактПотенциалАналитика.Потенциал, 0)) КАК Потенциал,
	|	ЕСТЬNULL(ВТ_ПланФактПотенциалАналитика.План, 0) КАК План,
	|	ЕСТЬNULL(ВТ_ПланФактПотенциалАналитика.Факт, 0) КАК Факт
	|ПОМЕСТИТЬ ВТ_Серии
	|ИЗ
	|	ВТ_ПланФактПотенциалАналитика КАК ВТ_ПланФактПотенциалАналитика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Классификация КАК ВТ_Классификация
	|		ПО (ВТ_Классификация.Ссылка = ВТ_ПланФактПотенциалАналитика.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПланФактПотенциалАналитика.Ссылка.БизнесРегион,
	|	ВТ_ПланФактПотенциалАналитика.ГруппаТоваров,
	|	ЕСТЬNULL(ВТ_Классификация.ГруппаКлиентов, ""Пусто""),
	|	ЕСТЬNULL(ВТ_ПланФактПотенциалАналитика.План, 0),
	|	ЕСТЬNULL(ВТ_ПланФактПотенциалАналитика.Факт, 0),
	|	ЕСТЬNULL(ВТ_ПланФактПотенциалАналитика.Ссылка.ОсновнойМенеджер.Наименование, ""Пусто"")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Регионы.Регион,
	|	ВТ_Регионы.ФО,
	|	ВТ_Регионы.Значение,
	|	ВТ_Регионы.ЦентрФО,
	|	ВТ_Серии.ГруппаТоваров КАК Продукция,
	|	ВТ_Серии.ГруппаКлиентов КАК Клиенты,
	|	ВТ_Серии.КАМ КАК Менеджеры,
	|	СУММА(ВТ_Серии.Потенциал) КАК Потенциал,
	|	СУММА(ВТ_Серии.План) КАК План,
	|	СУММА(ВТ_Серии.Факт) КАК Факт
	|ИЗ
	|	ВТ_Серии КАК ВТ_Серии
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Регионы КАК ВТ_Регионы
	|		ПО (ВТ_Серии.Регион = ВТ_Регионы.Регион
	|				ИЛИ ВТ_Серии.Потенциал + ВТ_Серии.План + ВТ_Серии.Факт = 0)
	|ГДЕ
	|	НЕ ВТ_Регионы.ФО = ЗНАЧЕНИЕ(Справочник.БизнесРегионы.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Регионы.ЦентрФО,
	|	ВТ_Регионы.ФО,
	|	ВТ_Серии.ГруппаКлиентов,
	|	ВТ_Серии.ГруппаТоваров,
	|	ВТ_Регионы.Регион,
	|	ВТ_Серии.КАМ,
	|	ВТ_Регионы.Значение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Потенциал УБЫВ,
	|	План УБЫВ,
	|	Факт УБЫВ"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаТекущая", ТекущаяДата());
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаСервере
Функция ПолучитьПалитру(Знач ТаблицаДанных)
	
	ТаблицаДанных.Свернуть("ФО");
	
	Палитра = Новый Соответствие;
	
	Красный	= 0;
	Зеленый	= 0;
	Синий	= 0;
	Номер	= -1;
	НомерЯркий = 22;
	
	МассивЦветов = ПолучитьМассивЦветов();
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		Если МенеджерЗадан(СтрокаДанных.ФО) Тогда
			Номер=Номер+1;
			Цвет = Номер;
		Иначе
			НомерЯркий=НомерЯркий+1;
			Цвет = НомерЯркий;
		КонецЕсли;
		
		СгенерироватьЦвет(МассивЦветов[Цвет], Красный, Зеленый, Синий);
		Палитра.Вставить(СтрокаДанных.ФО, Новый Цвет(Красный, Зеленый, Синий));
		
	КонецЦикла;
	
	Возврат Палитра;
	
КонецФункции

&НаСервере
Функция ПолучитьИмяГруппировки()
	ВариантыГруппировок = ПолучитьГруппировки();
	
	Для Каждого Элемент Из Элементы.ГруппаГруппировки.ПодчиненныеЭлементы Цикл
		Если Элемент.Пометка Тогда
			Возврат ВариантыГруппировок.Получить(Элемент);
		КонецЕсли;
	КонецЦикла;
КонецФункции

&НаСервере
Функция ПолучитьГруппировки()
	
	Перем ВариантыГруппировок;
	
	ВариантыГруппировок = Новый Соответствие;
	ВариантыГруппировок.Вставить(Элементы.Продукция,  "Продукция");
	ВариантыГруппировок.Вставить(Элементы.Клиенты,    "Клиенты");
	ВариантыГруппировок.Вставить(Элементы.Менеджеры,  "Менеджеры");
	Возврат ВариантыГруппировок;

КонецФункции

&НаСервере
Функция ПолучитьИмяПоказателя()
	ВариантыПоказателей = ПолучитьПоказатели();
	
	Для Каждого Элемент Из Элементы.ГруппаПоказатели.ПодчиненныеЭлементы Цикл
		Если Элемент.Пометка Тогда
			Возврат ВариантыПоказателей.Получить(Элемент);
		КонецЕсли;
	КонецЦикла;
КонецФункции

&НаСервере
Функция ПолучитьПоказатели()
	
	Перем ВариантыПоказателей;
	
	ВариантыПоказателей = Новый Соответствие;
	ВариантыПоказателей.Вставить(Элементы.Потенциал,  "Потенциал");
	ВариантыПоказателей.Вставить(Элементы.План,       "План");
	ВариантыПоказателей.Вставить(Элементы.Факт,       "Факт");
	Возврат ВариантыПоказателей;

КонецФункции

&НаСервере
Функция ПолучитьГеоСхему()
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ГеоСхема = ОбъектОбработки.ПолучитьМакет("Карта");
			
	Возврат ГеоСхема;
	
КонецФункции


&НаСервере
Функция ПолучитьКарту()
	
	ТаблицаДанных = ПолучитьДанные();
	
	Палитра = ПолучитьПалитру(ТаблицаДанных.Скопировать());
	
	ГеоСхема = ПолучитьГеоСхему();
	
	СлойРегионы = ГеоСхема.Слои["РЕГИОНЫ"];
	СерияФО     = СлойРегионы.Серии["ФО"];
	
	// очистим имена экономических регионов
	Для Каждого ОбъектСлоя Из СлойРегионы.Объекты Цикл
		СлойРегионы.УстановитьЗначение(ОбъектСлоя, СерияФО, "");
	КонецЦикла;
	
	ИмяПоказателя	= ПолучитьИмяПоказателя();
	ИмяГруппировки	= ПолучитьИмяГруппировки();
	
	ТаблицаСерий = ТаблицаДанных.Скопировать();
	ТаблицаСерий.Свернуть(ИмяГруппировки);
	МассивСерийКруговая = ТаблицаСерий.ВыгрузитьКолонку(ИмяГруппировки);
	
	МассивСерийГистограммы = Новый Массив;
	МассивСерийГистограммы.Добавить("Потенциал");
	МассивСерийГистограммы.Добавить("План");
	МассивСерийГистограммы.Добавить("Факт");
				
	СоответствиеСерий = Новый Соответствие;
	
	ДобавитьСерии(СлойРегионы, СоответствиеСерий, МассивСерийГистограммы, ТипОтображенияСерииСлояГеографическойСхемы.Гистограмма, , ИмяПоказателя);
	ДобавитьСерии(СлойРегионы, СоответствиеСерий, МассивСерийКруговая, ТипОтображенияСерииСлояГеографическойСхемы.Круговая, ИмяГруппировки);
	ДобавитьСерии(СлойРегионы, СоответствиеСерий, МассивСерийКруговая, ТипОтображенияСерииСлояГеографическойСхемы.НеОтображать, ИмяГруппировки, , Истина);
	
	Если ФОРегионы = 0 Тогда
		Параметр = "ФО";
		
		СлойРегионы.Серии.Удалить(СлойРегионы.Серии["НАЗВАНИЕ"]);
		СлойРегионы.Серии.Удалить(СлойРегионы.Серии["СТОЛИЦА"]);	
	ИначеЕсли ФОРегионы = 1 Тогда
		Параметр = "Значение";
	КонецЕсли;
	Круговая = ТаблицаДанных.Скопировать();
	Круговая.Свернуть(ИмяГруппировки+"," +Параметр, ИмяПоказателя);
		
	Гистограмма = ТаблицаДанных.Скопировать();
	Гистограмма.Свернуть(Параметр, "Потенциал, План, Факт");
		
	// переименуем экономические регионы, раскрасим и добавим значения серий
	Для Каждого СтрокаЗапроса Из ТаблицаДанных Цикл
		ОбъектСлоя = СлойРегионы.НайтиПоЗначению(СтрокаЗапроса.Значение);
		ОбъектСлоя.Расшифровка = СтрокаЗапроса.ФО.ЗначениеГеографическогоРегиона;
		Если ЗначениеЗаполнено(ОбъектСлоя) Тогда
			СлойРегионы.УстановитьЗначение(ОбъектСлоя, СерияФО, СтрокаЗапроса.ФО);
			ОбъектСлоя.Цвет = Палитра[СтрокаЗапроса.ФО];
			//ОбъектСлоя.ЦветГраницы = СоответствиеЦветов[СтрокаЗапроса.ФО];
			
			Если ФОРегионы = 1 Тогда
				ПараметрыОтбора = Новый Структура(Параметр, ОбъектСлоя.Значение); 
			ИначеЕсли ФОРегионы = 0 Тогда
				Если СтрокаЗапроса.ЦентрФО Тогда
					ПараметрыОтбора = Новый Структура(Параметр, СтрокаЗапроса.ФО); 
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Массив = Круговая.НайтиСтроки(ПараметрыОтбора);
			Для Каждого Элемент Из Массив Цикл
				Если ЗначениеЗаполнено(Элемент[ИмяГруппировки]) Тогда
					Значение = Элемент[ИмяПоказателя];
					Если НЕ ЗначениеЗаполнено(Значение) И Элемент[ИмяГруппировки] = "Пусто" Тогда
						Продолжить;
					КонецЕсли;
					ИмяНовойСерии = ПолучитьИмяСерии(Элемент[ИмяГруппировки], НЕ ЗначениеЗаполнено(Значение));
					СлойРегионы.УстановитьЗначение(ОбъектСлоя, СоответствиеСерий[ИмяНовойСерии], Значение,,ОбъектСлоя.Значение);
				КонецЕсли;
			КонецЦикла;
			Массив = Гистограмма.НайтиСтроки(ПараметрыОтбора);
			Для Каждого Элемент Из Массив Цикл
				Для Каждого ЭлементГистограммы Из МассивСерийГистограммы Цикл
					Если ЗначениеЗаполнено(Элемент[ИмяПоказателя]) Тогда
						СлойРегионы.УстановитьЗначение(ОбъектСлоя, СоответствиеСерий[ЭлементГистограммы], Элемент[ЭлементГистограммы],,ОбъектСлоя.Значение);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	ВывестиГистограмму(Гистограмма, СоответствиеСерий);
	
	ВывестиКруговую(Круговая, ИмяГруппировки, ИмяПоказателя, СоответствиеСерий);
	
	Возврат ГеоСхема;
КонецФункции

&НаСервере
Процедура ВывестиКруговую(Знач Круговая, ИмяГруппировки, ИмяПоказателя, Знач СоответствиеСерий)
	
	Перем Серия, СтрокаКруговая, Точка;
	
	ДиаграммаКруговая.Обновление = Ложь;
	ДиаграммаКруговая.Очистить();
	ДиаграммаКруговая.ФорматЗначенийВПодписях = "ЧДЦ=; ЧС=3";
	ДиаграммаКруговая.ОбластьПостроения.ФорматШкалыЗначений = "ЧДЦ=; ЧС=3";
	ДиаграммаКруговая.ВидПодписей = ВидПодписейКДиаграмме.СерияЗначение;
	ДиаграммаКруговая.ПалитраЦветов = ПалитраЦветовДиаграммы.Палитра32;
	ДиаграммаКруговая.ВидПодписей = ВидПодписейКДиаграмме.Серия;
	
	Точка = ДиаграммаКруговая.Точки.Добавить("");
	
	Круговая.Свернуть(ИмяГруппировки, ИмяПоказателя);
	Для Каждого СтрокаКруговая Из Круговая Цикл
		Серия = ДиаграммаКруговая.Серии.Добавить(Строка(СтрокаКруговая[ИмяГруппировки]));
		Серия.Цвет = СоответствиеСерий[ПолучитьИмяСерии(СтрокаКруговая[ИмяГруппировки])].БазовыйЦветФигуры;
		ДиаграммаКруговая.УстановитьЗначение(Точка, Серия, СтрокаКруговая[ИмяПоказателя]);
	КонецЦикла;
	
	ДиаграммаКруговая.Обновление = Истина;

КонецПроцедуры

&НаСервере
Процедура ВывестиГистограмму(Знач Гистограмма, Знач СоответствиеСерий)
	
	Перем ИмяТочки, КолонкаГистограмма, Серия, СтрокаГистограмма, Точка;
	
	ДиаграммаГистограмма.Обновление = Ложь;
	ДиаграммаГистограмма.Очистить();
	ДиаграммаГистограмма.ФорматЗначенийВПодписях = "ЧДЦ=; ЧС=3";
	ДиаграммаГистограмма.ОбластьПостроения.ФорматШкалыЗначений = "ЧДЦ=; ЧС=3";
	ДиаграммаГистограмма.ВидПодписей = ВидПодписейКДиаграмме.СерияЗначение;
	ДиаграммаГистограмма.ПалитраЦветов = ПалитраЦветовДиаграммы.Палитра8;
	ДиаграммаГистограмма.ВидПодписей = ВидПодписейКДиаграмме.Серия;

	Гистограмма.Свернуть("", "Потенциал, План, Факт");
	ИмяТочки = "";
	Точка = ДиаграммаГистограмма.Точки.Добавить(ИмяТочки);
	
	Для Каждого СтрокаГистограмма Из Гистограмма Цикл
		Для Каждого КолонкаГистограмма Из Гистограмма.Колонки Цикл
			Серия = ДиаграммаГистограмма.Серии.Добавить(КолонкаГистограмма.Имя);
			Серия.Цвет = СоответствиеСерий[КолонкаГистограмма.Имя].БазовыйЦветФигуры;
			ДиаграммаГистограмма.УстановитьЗначение(Точка, Серия, СтрокаГистограмма[КолонкаГистограмма.Имя]);
		КонецЦикла;
	КонецЦикла;
	
	ДиаграммаГистограмма.Обновление = Истина;

КонецПроцедуры

&НаСервере
Процедура СгенерироватьЦвет(_H, R, G, B)
	Если _H >= 2000 Тогда
		H = _H-2000;
		S	= 100;
		V	= 49;
	ИначеЕсли _H >= 1000 Тогда
		H = _H-1000;
		S	= 50;
		V	= 100;
	ИначеЕсли _H >= 0 Тогда
		H	= _H;	
		S	= 100;
		V	= 100;
	КонецЕсли;
	Hi   = Цел((H/60)%6);
	Vmin = (100-S)*V/100;
	a    = (V-Vmin)*(H%60)/60;
	Vinc = Vmin + a;
	Vdec = V - a;
	
	Если Hi=0 Тогда
		R=V;
		G=Vinc;
		B=Vmin;
	ИначеЕсли Hi=1 Тогда
		R=Vdec;
		G=V;
		B=Vmin;
	ИначеЕсли Hi=2 Тогда
		R=Vmin;
		G=V;
		B=Vinc;
	ИначеЕсли Hi=3 Тогда
		R=Vmin;
		G=Vdec;
		B=V;
	ИначеЕсли Hi=4 Тогда
		R=Vinc;
		G=Vmin;
		B=V;
	ИначеЕсли Hi=5 Тогда
		R=V;
		G=Vmin;
		B=Vdec;
	КонецЕсли;
	
	K = 255/100;
	R=R*K;
	G=G*K;
	B=B*K;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивЦветов()
	МассивЦветов = Новый Массив;
	
	МассивЦветов.Добавить(1000);
	МассивЦветов.Добавить(1030);
	МассивЦветов.Добавить(1060);
	МассивЦветов.Добавить(1090);
	МассивЦветов.Добавить(1120);
	МассивЦветов.Добавить(1150);
	МассивЦветов.Добавить(1180);
	МассивЦветов.Добавить(1210);
	МассивЦветов.Добавить(1240);
	МассивЦветов.Добавить(1270);
	МассивЦветов.Добавить(1300);
	МассивЦветов.Добавить(1330);
	
	МассивЦветов.Добавить(2000);
	МассивЦветов.Добавить(2030);
	МассивЦветов.Добавить(2060);
	МассивЦветов.Добавить(2090);
	МассивЦветов.Добавить(2120);
	МассивЦветов.Добавить(2150);
	МассивЦветов.Добавить(2180);
	МассивЦветов.Добавить(2210);
	МассивЦветов.Добавить(2240);
	МассивЦветов.Добавить(2270);
	МассивЦветов.Добавить(2300);
	МассивЦветов.Добавить(2330);
	
	МассивЦветов.Добавить(0);
	МассивЦветов.Добавить(30);
	МассивЦветов.Добавить(60);
	МассивЦветов.Добавить(90);
	МассивЦветов.Добавить(120);
	МассивЦветов.Добавить(150);
	МассивЦветов.Добавить(180);
	МассивЦветов.Добавить(210);
	МассивЦветов.Добавить(240);
	МассивЦветов.Добавить(270);
	МассивЦветов.Добавить(300);
	МассивЦветов.Добавить(330);
	
	Возврат МассивЦветов;
КонецФункции

&НаСервере
Функция ПолучитьЦветДляДиаграммы(Н)
	ДиаграммаДляЦветов = Новый Диаграмма;
	ДиаграммаДляЦветов.ПалитраЦветов = ПалитраЦветовДиаграммы.Палитра32;
	
	Для Счетчик = 1 По Н Цикл
		Серия = ДиаграммаДляЦветов.Серии.Добавить("");
	КонецЦикла;
	
	Возврат Серия.Цвет;
КонецФункции

&НаСервере
Процедура ДобавитьСерии(СлойРегионы, СоответствиеСерий, МассивСерий, Отображение, Имя = "", Выделить = "", Пустая = Ложь)
	
	СчетчикЦветов = 0;
	НомерЦвета = 0;
	Для Каждого ИмяСерии Из МассивСерий Цикл
		Если ЗначениеЗаполнено(ИмяСерии) Тогда
			ИмяНовойСерии = ПолучитьИмяСерии(ИмяСерии, Пустая);
			ТекстНовойСерии = Строка(ИмяСерии);
			
			НоваяСерия = СлойРегионы.Серии.Добавить(ИмяНовойСерии);
			НоваяСерия.ТипОтображения = Отображение;
			//НоваяСерия.РежимОтображенияЗначений = РежимОтображенияЗначенийСерии.ОтображатьКакЗначение;
			НоваяСерия.Текст = ?(ЗначениеЗаполнено(Имя), Имя+" ", "")+ТекстНовойСерии;
			НоваяСерия.ИмяГруппыСерий = Имя;
			НоваяСерия.Формат = "ЧДЦ=";
			
			Если ЗначениеЗаполнено(Выделить) Тогда
				Если ИмяСерии = Выделить Тогда
					НоваяСерия.БазовыйЦветФигуры = WebЦвета.Красный;
				ИначеЕсли СчетчикЦветов = 0 Тогда
					НоваяСерия.БазовыйЦветФигуры = WebЦвета.БледноБирюзовый;
					СчетчикЦветов=СчетчикЦветов+1;
				ИначеЕсли СчетчикЦветов = 1 Тогда
					НоваяСерия.БазовыйЦветФигуры = WebЦвета.БледноЗеленый;
					СчетчикЦветов=СчетчикЦветов+1;
				КонецЕсли;
			Иначе
				НоваяСерия.БазовыйЦветФигуры = ПолучитьЦветДляДиаграммы(НомерЦвета+1);
				НомерЦвета=НомерЦвета+1;
			КонецЕсли;
			
			СоответствиеСерий.Вставить(ИмяНовойСерии, НоваяСерия);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ПолучитьИмяСерии(ИмяСерии, Пустая = Ложь)
	
	ИмяНовойСерии = Строка(ИмяСерии);
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, " ", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, "-", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, ",", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, ".", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, "@", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, "#", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, "!", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, "(", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, ")", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, "*", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, "&", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, ":", "_");
	ИмяНовойСерии = СтрЗаменить(ИмяНовойСерии, "+", "_");
	Если Пустая = Истина Тогда
		ИмяНовойСерии="ПУСТАЯ_"+ИмяНовойСерии;
	КонецЕсли;
	
	Возврат ИмяНовойСерии;

КонецФункции

&НаСервере
Функция ПолучитьЗначение(Соответствие)
	Результат = "";
	Для Каждого КлючИЗначение Из Соответствие Цикл
		Если КлючИЗначение.Ключ.Пометка Тогда
			Результат = КлючИЗначение.Значение;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ЗаголовокКарты()
	Результат = ПолучитьЗначение(ПолучитьПоказатели())+"/"+ПолучитьЗначение(ПолучитьГруппировки()) ;
	Возврат Результат;
КонецФункции

&НаСервере
Процедура КартаНаСервере()
	
	//СтруктураГеоСхемы = Новый ГеографическаяСхема; //для написания кода
	Если ПроверитьПометки(ПолучитьГруппировки()) И 	ПроверитьПометки(ПолучитьПоказатели()) Тогда
		
		ОчиститьОписание();
		
		Схема = ПолучитьКарту();
		
		Схема.ОтображатьЗаголовок = Истина;
		Схема.ОтображатьЛегенду = Ложь;
		Схема.ОбластьЛегенды.МасштабнаяЛинейка = Ложь;
		
		Схема.ОбластьЗаголовка.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки, 0);
		Схема.ОбластьЗаголовка.Текст = ЗаголовокКарты();
		
		//ДокументРезультат.Очистить();
		//// Подготовим географическую схему
		//Рисунок = ДокументРезультат.Рисунки.Добавить(ТипРисункаТабличногоДокумента.ГеографическаяСхема);
		//Рисунок.Защита = Ложь;
		
		//Схема = Рисунок.Объект;
		//Схема.Очистить();
		////Схема.Обновление = Ложь;
		
		////Схема.Вывести(СтруктураГеоСхемы);	
		
		//Масштабировать();
			
		ГеографическаяСхема.Обновление = Ложь;
		
		ГеографическаяСхема.Очистить();
		ГеографическаяСхема.Вывести(Схема);
		
		ГеографическаяСхема.Обновление = Истина;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ПроверитьПометки(Знач СоответствиеКнопок)
	
	Результат = Ложь;
	Для Каждого КлючИЗначение Из СоответствиеКнопок Цикл
		Если КлючИЗначение.Ключ.Пометка Тогда
			Результат = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

&НаСервере
Процедура Масштабировать()
	
	Рисунок = ДокументРезультат.Рисунки[0];
	// Настройка размеров рисунка
	Если НЕ ЗначениеЗаполнено(МасштабСхемы) Тогда
		КоэффМасштаба = 1;
	Иначе
		КоэффМасштаба = МасштабСхемы / 100;
	КонецЕсли;
	
	Рисунок.Ширина = 200 * КоэффМасштаба;
	Рисунок.Высота = 160 * КоэффМасштаба;

КонецПроцедуры

&НаКлиенте
Процедура МасштабСхемыПриИзменении(Элемент)
	Масштабировать();
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивПартнеров(Расшифровка)
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Партнеры.Ссылка
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	Партнеры.Клиент
	|	И Партнеры.БизнесРегион В ИЕРАРХИИ(&БизнесРегион)"
	;
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("БизнесРегион", Расшифровка.БизнесРегион);
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период.Вариант = ВариантСтандартногоПериода.ЭтотГод;
	HTML = "http://map.coffeestudio.ru";
	//СоответствиеМасштабов = Новый Соответствие;
	//СоответствиеМасштабов.Вставить(1024,95);
	//СоответствиеМасштабов.Вставить(1152,100);
	//СоответствиеМасштабов.Вставить(1280,115);
	//СоответствиеМасштабов.Вставить(1366,115);
	//СоответствиеМасштабов.Вставить(1400,120);
	//СоответствиеМасштабов.Вставить(1440,125);
	//СоответствиеМасштабов.Вставить(1600,155);
	//СоответствиеМасштабов.Вставить(1680,185);
	//СоответствиеМасштабов.Вставить(1920,215);

	//ОсновнойДисплейШирина = ПолучитьИнформациюЭкрановКлиента()[0].Ширина;
	//МасштабСхемы = СоответствиеМасштабов.Получить(ОсновнойДисплейШирина);
КонецПроцедуры

&НаКлиенте
Процедура ВаловаяПрибыльПредприятия(Команда)
	ОткрытьФорму("Отчет.ВыручкаИСебестоимостьПродаж.Форма");
КонецПроцедуры

&НаКлиенте
Процедура МаркетинговыеМероприятия(Команда)
	ОткрытьФорму("Справочник.МаркетинговыеМероприятия.ФормаСписка");
КонецПроцедуры

&НаСервере
Процедура УстановитьПоказатель(ИмяЭлемента)
	
	СоотвествиеКнопок = ПолучитьПоказатели();
	УстановитьПометкиКнопок(ИмяЭлемента, СоотвествиеКнопок);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьГруппировку(ИмяЭлемента)
	
	СоотвествиеКнопок = ПолучитьГруппировки();
	УстановитьПометкиКнопок(ИмяЭлемента, СоотвествиеКнопок);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПометкиКнопок(Знач ИмяЭлемента, Знач СоотвествиеКнопок)
	
	Перем КлючИЗначение;
	
	Для Каждого КлючИЗначение Из СоотвествиеКнопок Цикл
		Если ИмяЭлемента = КлючИЗначение.Значение Тогда
			КлючИЗначение.Ключ.Пометка = Истина;
			Если КлючИЗначение.Ключ.Родитель = Элементы.ГруппаПоказатели Тогда
				КлючИЗначение.Ключ.ЦветФона = WebЦвета.Красный;
			Иначе
				КлючИЗначение.Ключ.ЦветФона = WebЦвета.СеребристоСерый;
			КонецЕсли;
		Иначе
			КлючИЗначение.Ключ.Пометка = Ложь;
			КлючИЗначение.Ключ.ЦветФона = Новый Цвет();
		КонецЕсли;
	КонецЦикла;
	
	КартаНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура Потенциал(Команда)
	УстановитьПоказатель(Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура План(Команда)
	УстановитьПоказатель(Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Факт(Команда)
	УстановитьПоказатель(Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Продукция(Команда)
	УстановитьГруппировку(Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Клиенты(Команда)
	УстановитьГруппировку(Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Менеджеры(Команда)
	УстановитьГруппировку(Команда.Имя);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОписание(Расшифровка)
	Если ЗначениеЗаполнено(Расшифровка) Тогда
		
		СлойРегионы = ГеографическаяСхема.Слои["РЕГИОНЫ"];
		ОбъектРасшифровки = СлойРегионы.НайтиПоЗначению(Расшифровка);
		
		Описание = Элементы.ГруппаОписание;
		
		Для Каждого Серия Из ОбъектРасшифровки.Слой.Серии Цикл
			ЗначениеСерии = СлойРегионы.ПолучитьЗначение(ОбъектРасшифровки, Серия);
			Если ЗначениеЗаполнено(ЗначениеСерии) Тогда
				Родитель = Элементы.Добавить("Группа"+Серия.Имя, Тип("ГруппаФормы"), Описание);
				Родитель.Вид = ВидГруппыФормы.ОбычнаяГруппа;
				Родитель.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
				Родитель.ОтображатьЗаголовок = Ложь;
				
				Надпись = Элементы.Добавить("Надпись"+Серия.Имя, Тип("ДекорацияФормы"), Родитель);
				Надпись.Вид = ВидДекорацииФормы.Надпись;
				Надпись.Заголовок = Серия.Текст;
				
				Значение = Элементы.Добавить("Значение"+Серия.Имя, Тип("ДекорацияФормы"), Родитель);
				Значение.Вид = ВидДекорацииФормы.Надпись;
				Значение.Заголовок = ЗначениеСерии.Значение;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОчиститьОписание()
	
	Описание = Элементы.ГруппаОписание;
	Пока Описание.ПодчиненныеЭлементы.Количество() > 0 Цикл
		Для Каждого Элемент Из Описание.ПодчиненныеЭлементы Цикл
			Элементы.Удалить(Элемент);
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ГеографическаяСхемаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//ГеографическаяСхема.Показать();
	
	ОчиститьОписание();
	
	ЗаполнитьОписание(Расшифровка);
	
	//ИмяФормыОтчета = "Отчет.ВыручкаИСебестоимостьПродаж.ФормаОбъекта"; 
	//ПараметрКоманды = ПолучитьМассивПартнеров(Расшифровка);

	//ПараметрыОткрытия = Новый Структура;
	//ПараметрыОткрытия.Вставить("ВидимостьКомандВариантовОтчетов", Ложь);
	//ПараметрыОткрытия.Вставить("ИмяФормыОтчета", "Отчет.ВыручкаИСебестоимостьПродаж.ФормаОбъекта");
	//ПараметрыОткрытия.Вставить("КлючВарианта", "ДинамикаПродажКонтекст");
	//ПараметрыОткрытия.Вставить("Отбор",	Неопределено);
	//ПараметрыОткрытия.Вставить("ПараметрКоманды", ПараметрКоманды);
	//ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина);
	//
	//СтруктураПараметровОтчета = Новый Структура;
	//
	//СтруктураПараметровОтчета.Вставить("ВыполнятьЗаписьВФорме",	Ложь);
	//СтруктураПараметровОтчета.Вставить("ДополнительныеПараметры", Новый Структура("ИмяКоманды", "Продажи"));
	//СтруктураПараметровОтчета.Вставить("ЗаголовокФормы","");
	//СтруктураПараметровОтчета.Вставить("Идентификатор", "Отчет.ВыручкаИСебестоимостьПродаж");
	//СтруктураПараметровОтчета.Вставить("ПараметрКоманды", ПараметрКоманды);
	//СтруктураПараметровОтчета.Вставить("ПараметрыФормы", Новый Структура("ВидимостьКомандВариантовОтчетов, КлючВарианта, СформироватьПриОткрытии", Истина, "ДинамикаПродажКонтекст", Истина));
	//СтруктураПараметровОтчета.Вставить("Порядок", 50);
	//СтруктураПараметровОтчета.Вставить("Представление", "Продажи");
	//СтруктураПараметровОтчета.Вставить("ПроверкаПроведенияПередОтчетом", Ложь);
	//СтруктураПараметровОтчета.Вставить("РежимИспользованияПараметра", РежимИспользованияПараметраКоманды.Множественный);
	//СтруктураПараметровОтчета.Вставить("СкрытаФункциональнымиОпциями", Ложь);
	//СтруктураПараметровОтчета.Вставить("СписокФорм", "ФормаЭлемента,ФормаСписка,ФормаСпискаБезПолнотекстовогоПоиска,ФормаЭлементаРеквизитыКонтрагента");
	//СтруктураПараметровОтчета.Вставить("ФункциональныеОпции", "ИспользоватьДанныеПартнераКлиентаКонтекст");
	//
	//ПараметрыОткрытия.Вставить("ПараметрыОтчет", СтруктураПараметровОтчета);
	//
	//ОткрытьФорму(ИмяФормыОтчета, ПараметрыОткрытия, ЭтаФорма, ПараметрКоманды);
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаПриИзменении(Элемент)
	УстановитьГруппировку(ГруппировкаКарты);
КонецПроцедуры

&НаКлиенте
Процедура ПоказательПриИзменении(Элемент)
	УстановитьПоказатель(ПоказательКарты);
КонецПроцедуры
