
&НаСервере
Процедура CCRM_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьВыполнениеПослеОбработчиковСобытия("CCRM_УправлениеДоступностью");
	Redmine = Новый HTTPСоединение("server.prof-it.ru", , "romik", "CWTb8VSE");
	Wiki = Новый HTTPЗапрос("redmine/projects/ciret/wiki/Матрица_клиента.html");
	HTTPОтвет = Redmine.Получить(Wiki);
	ВикиРедмайн = HTTPОтвет.ПолучитьТелоКакСтроку();
	
	СоздатьТТStorch();
КонецПроцедуры

&НаСервере
Процедура CCRM_УправлениеДоступностью(Отказ, СтандартнаяОбработка, ДополнительныйПараметр)
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	СвойствоРоль = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Юрист (Пользователи)");
	СтрокаСвойстваРоль = Пользователь.ДополнительныеРеквизиты.Найти(СвойствоРоль);
	СвойствоДоступ = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Проверено юротделом (Клиенты)");
	ЭтотПартнер = РеквизитФормыВЗначение("Объект");
	СтрокаСвойстваДоступ = ЭтотПартнер.ДополнительныеРеквизиты.Найти(СвойствоДоступ);
	РольДоступна = Ложь;
	Если ЗначениеЗаполнено(СтрокаСвойстваРоль) Тогда
		РольДоступна = СтрокаСвойстваРоль.Значение;
	КонецЕсли;                               
	РедактированиеДоступно = Истина;
	Если ЗначениеЗаполнено(СтрокаСвойстваДоступ) Тогда
		РедактированиеДоступно = НЕ СтрокаСвойстваДоступ.Значение;
	КонецЕсли;
	Если НЕ РольДоступна И НЕ РедактированиеДоступно Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура CCRM_ПриОткрытии(Отказ)
	УстановитьВыполнениеПослеОбработчиковСобытия("CCRM_ПриОткрытииПослеОбработчиковСобытия");
КонецПроцедуры

&НаКлиенте
Процедура CCRM_ПриОткрытииПослеОбработчиковСобытия(Отказ, ДополнительныйПарамет)
	CCRM_ПриОткрытииНаСервере();	
КонецПроцедуры

&НаСервере
Процедура CCRM_ПриОткрытииНаСервере()
	//Вставить содержимое обработчика
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	СвойствоРоль = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Юрист (Пользователи)");
	СтрокаСвойстваРоль = Пользователь.ДополнительныеРеквизиты.Найти(СвойствоРоль);
	СвойствоДоступ = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Проверено юротделом (Клиенты)");
	ЭтотПартнер = РеквизитФормыВЗначение("Объект");
	СтрокаСвойстваДоступ = ЭтотПартнер.ДополнительныеРеквизиты.Найти(СвойствоДоступ);
	РольДоступна = Ложь;
	Если ЗначениеЗаполнено(СтрокаСвойстваРоль) Тогда
		РольДоступна = СтрокаСвойстваРоль.Значение;
	КонецЕсли;                               
	Если НЕ РольДоступна Тогда
		Переменная = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоздатьТТStorch()
	Перем ЗначениеПоУмолчанию;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК СвойствоСсылка,
	|	ДополнительныеСведения.Значение КАК Значение,
	|	ПОДСТРОКА(ДополнительныеРеквизитыИСведения.Комментарий, 1, 2) КАК Индекс,
	|	ДополнительныеРеквизитыИСведения.Комментарий КАК Комментарий
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|		ПО ДополнительныеРеквизитыИСведения.Ссылка = ДополнительныеСведения.Свойство
	|			И (ДополнительныеСведения.Объект = &Объект)
	|ГДЕ
	|	ПОДСТРОКА(ДополнительныеРеквизитыИСведения.Подсказка, 1, 14) = ""Торговые точки""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Индекс"
	;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Объект", Объект.Ссылка);
	ВыборкаСведений = Запрос.Выполнить().Выбрать();
	
	РеквизитыФормыСведения = Новый Соответствие();
	РеквизитыФормыЗначения = Новый Соответствие();
	
	ДобавляемыеРеквизиты = Новый Массив;
	Пока ВыборкаСведений.Следующий() Цикл
		КодЗначенияПоУмолчанию = Прав(ВыборкаСведений.Комментарий, СтрДлина(ВыборкаСведений.Комментарий) - 3);
		
		Попытка
			Значение = ЗначениеИзСтрокиВнутр(ВыборкаСведений.Значение);
		Исключение
			Значение = ВыборкаСведений.Значение;
		КонецПопытки;
		
		ТипЗначения = ВыборкаСведений.СвойствоСсылка.ТипЗначения;
		
		Если ЗначениеЗаполнено(КодЗначенияПоУмолчанию) Тогда
			Выполнить(КодЗначенияПоУмолчанию);
			Если ТипЗнч(Значение) <> ТипЗнч(ЗначениеПоУмолчанию) Тогда
				Значение = ЗначениеПоУмолчанию;
			КонецЕсли;
			Типы = Новый Массив;
			Типы.Добавить(ТипЗнч(Значение));
			ТипЗначения = Новый ОписаниеТипов(Типы);			
		КонецЕсли;
		
		
		ЗаголовокЗначения = ВыборкаСведений.СвойствоСсылка.Заголовок;
		ИмяЗначения = СтрЗаменить(ЗаголовокЗначения, " ", "_");
		
		НовыйРеквизит = Новый РеквизитФормы(ИмяЗначения, ТипЗначения, , ЗаголовокЗначения, Истина);
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		Если ТипЗначения.СодержитТип(Тип("ТаблицаЗначений")) Тогда
			Для Каждого Колонка Из Значение.Колонки Цикл
				НовыйРеквизитТЧ = Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ИмяЗначения, Истина);
				ДобавляемыеРеквизиты.Добавить(НовыйРеквизитТЧ);
			КонецЦикла;
		КонецЕсли;

		РеквизитыФормыСведения.Вставить(ИмяЗначения, НовыйРеквизит);
		РеквизитыФормыЗначения.Вставить(ИмяЗначения, Значение);
	КонецЦикла;
	
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	Для Каждого КлючИЗначение Из РеквизитыФормыЗначения Цикл
		Если ТипЗнч(КлючИЗначение.Значение) = Тип("ТаблицаЗначений") Тогда
			ЭтаФорма[КлючИЗначение.Ключ].Загрузить(КлючИЗначение.Значение);
		Иначе
			ЭтаФорма[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
		КонецЕсли;
	КонецЦикла;
	
	CCRM_ОбщийМодульТорговыеТочки.СформироватьИнтерфейс(ЭтаФорма, Элементы.ГруппаТТStorch);

КонецПроцедуры

&НаСервере
Процедура CCRM_ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	CCRM_ОбщийМодульТорговыеТочки.ЗаписатьДопСведения(Объект.Ссылка, ЭтотОбъект.Название_точки_продаж, "Название точки продаж", "Клиенты");
	CCRM_ОбщийМодульТорговыеТочки.ЗаписатьДопСведения(Объект.Ссылка, ЭтотОбъект.Название_торгового_места, "Название торгового места", "Клиенты");
	CCRM_ОбщийМодульТорговыеТочки.ЗаписатьДопСведения(Объект.Ссылка, ЭтотОбъект.Город, "Город", "Клиенты");
	CCRM_ОбщийМодульТорговыеТочки.ЗаписатьДопСведения(Объект.Ссылка, ЭтотОбъект.Индекс, "Индекс", "Клиенты");
	CCRM_ОбщийМодульТорговыеТочки.ЗаписатьДопСведения(Объект.Ссылка, ЭтотОбъект.Адрес, "Адрес", "Клиенты");
	CCRM_ОбщийМодульТорговыеТочки.ЗаписатьДопСведения(Объект.Ссылка, ЭтотОбъект.Павильон, "Павильон", "Клиенты");
	CCRM_ОбщийМодульТорговыеТочки.ЗаписатьДопСведения(Объект.Ссылка, ЭтотОбъект.Время_работы.Выгрузить(), "Время работы", "Клиенты", Истина);
	CCRM_ОбщийМодульТорговыеТочки.ЗаписатьДопСведения(Объект.Ссылка, ЭтотОбъект.Стенд_Storch, "Стенд Storch", "Клиенты");
	CCRM_ОбщийМодульТорговыеТочки.ЗаписатьДопСведения(Объект.Ссылка, ЭтотОбъект.Стенды.Выгрузить(), "Стенды", "Клиенты", Истина);
КонецПроцедуры

&Вместо("КонтактнаяИнформацияПриСменеСтраницы")
Процедура CCRM_КонтактнаяИнформацияПриСменеСтраницы()
	
	УправлениеКонтактнойИнформацией.ВыполнитьОтложеннуюИнициализацию(ЭтотОбъект, Объект);
	УправлениеКонтактнойИнформацией.ВыполнитьОтложеннуюИнициализацию(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформацияStorch");
	
КонецПроцедуры

&НаКлиенте
Процедура CCRM_ГруппаСтраницыПриСменеСтраницыПосле(Элемент, ТекущаяСтраница)	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	Если ТекущаяСтраница.Имя = "ГруппаТТStorch"
		И Не ПараметрыКонтактнойИнформации.ГруппаКонтактнаяИнформация.ВыполненаОтложеннаяИнициализация Тогда
		
		КонтактнаяИнформацияПриСменеСтраницы();
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры
