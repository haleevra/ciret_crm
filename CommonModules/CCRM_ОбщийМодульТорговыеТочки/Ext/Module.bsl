Процедура СформироватьИнтерфейс(Форма, Страница) Экспорт
	Элемент = Форма.Элементы.Вставить("Название_точки_продаж", Тип("ПолеФормы"), Страница);
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = "Название_точки_продаж";
	
	Элемент = Форма.Элементы.Вставить("Название_торгового_места", Тип("ПолеФормы"), Страница);
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = "Название_торгового_места";
	
	ГруппаАдресТТ = Форма.Элементы.Вставить("ГруппаАдресТТ", Тип("ГруппаФормы"), Страница);
	ГруппаАдресТТ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаАдресТТ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаАдресТТ.ОтображатьЗаголовок = Ложь;
	
	ГруппаГородИндекс = Форма.Элементы.Вставить("ГруппаГородИндекс", Тип("ГруппаФормы"), ГруппаАдресТТ);
	ГруппаГородИндекс.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаГородИндекс.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ГруппаГородИндекс.ОтображатьЗаголовок = Ложь;
	
	Элемент = Форма.Элементы.Вставить("Город", Тип("ПолеФормы"), ГруппаГородИндекс);
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = "Город";
	
	Элемент = Форма.Элементы.Вставить("Индекс", Тип("ПолеФормы"), ГруппаГородИндекс);
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = "Индекс";
	
	Элемент = Форма.Элементы.Вставить("Адрес", Тип("ПолеФормы"), ГруппаАдресТТ);
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = "Адрес";
	
	Элемент = Форма.Элементы.Вставить("Павильон", Тип("ПолеФормы"), ГруппаАдресТТ);
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = "Павильон";
	
	ГруппаКонтактнаяИнформацияStorch = Форма.Элементы.Вставить("ГруппаКонтактнаяИнформацияStorch", Тип("ГруппаФормы"), Страница);
	ГруппаКонтактнаяИнформацияStorch.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаКонтактнаяИнформацияStorch.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаКонтактнаяИнформацияStorch.ОтображатьЗаголовок = Ложь;
	
	ГруппаВремяРаботыТТ = Форма.Элементы.Вставить("ГруппаВремяРаботыТТ", Тип("ГруппаФормы"), Страница);
	ГруппаВремяРаботыТТ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаВремяРаботыТТ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаВремяРаботыТТ.ОтображатьЗаголовок = Истина;
	ГруппаВремяРаботыТТ.Заголовок = "Время работы";
	
	Для Н = 0 По Форма.Время_работы.Количество() - 1 Цикл 
		ГруппаДень = Форма.Элементы.Вставить("ГруппаДень"+Формат(Н), Тип("ГруппаФормы"), ГруппаВремяРаботыТТ);
		ГруппаДень.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаДень.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаДень.ОтображатьЗаголовок = Ложь;
		Элемент = Форма.Элементы.Вставить("Время_работыДень"+Формат(Н), Тип("ПолеФормы"), ГруппаДень);
		Элемент.Вид = ВидПоляФормы.ПолеНадписи;
		Элемент.ПутьКДанным = СтрШаблон("Время_работы[%1].День", Н);
		Элемент.Формат = "ДФ=ddd";
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		Элемент = Форма.Элементы.Вставить("Время_работыС"+Формат(Н), Тип("ПолеФормы"), ГруппаДень);
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным = СтрШаблон("Время_работы[%1].С", Н);
		Элемент.ФорматРедактирования = "ДФ=HH:mm";
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		Элемент = Форма.Элементы.Вставить("Время_работыПо"+Формат(Н), Тип("ПолеФормы"), ГруппаДень);
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным = СтрШаблон("Время_работы[%1].По", Н);
		Элемент.ФорматРедактирования = "ДФ=HH:mm";
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КонецЦикла;
	ГруппаСтендыТТ = Форма.Элементы.Вставить("ГруппаСтендыТТ", Тип("ГруппаФормы"), Страница);
	ГруппаСтендыТТ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаСтендыТТ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаСтендыТТ.ОтображатьЗаголовок = Ложь;
	
	Элемент = Форма.Элементы.Вставить("Стенд_Storch", Тип("ПолеФормы"), ГруппаСтендыТТ);
	Элемент.Вид = ВидПоляФормы.ПолеПереключателя;
	Элемент.ВидПереключателя = ВидПереключателя.Тумблер;
	Элемент.ПутьКДанным = "Стенд_Storch";
	Элемент.СписокВыбора.Добавить(0, "Присутствует товар без стенда");
	Элемент.СписокВыбора.Добавить(1, "Стенд Storch");
	Для Н = 0 По Форма.Стенды.Количество() - 1 Цикл 
		ГруппаСтендТТ = Форма.Элементы.Вставить("ГруппаСтендТТ"+Формат(Н), Тип("ГруппаФормы"), ГруппаСтендыТТ);
		ГруппаСтендТТ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаСтендТТ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаСтендТТ.ОтображатьЗаголовок = Ложь;
		Элемент = Форма.Элементы.Вставить("СтендыПометка"+Формат(Н), Тип("ПолеФормы"), ГруппаСтендТТ);
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.ПутьКДанным = СтрШаблон("Стенды[%1].Пометка", Н);
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		Элемент = Форма.Элементы.Вставить("СтендыНаименование"+Формат(Н), Тип("ПолеФормы"), ГруппаСтендТТ);
		Элемент.Вид = ВидПоляФормы.ПолеНадписи;
		Элемент.ПутьКДанным = СтрШаблон("Стенды[%1].Наименование", Н);
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		Элемент = Форма.Элементы.Вставить("СтендыКоличество"+Формат(Н), Тип("ПолеФормы"), ГруппаСтендТТ);
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным = СтрШаблон("Стенды[%1].Количество", Н);
		Элемент.Заголовок = "Количество";
	КонецЦикла;
	Элемент = Форма.Элементы.Вставить("Комментарий_Storch", Тип("ПолеФормы"), Страница);
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = "Комментарий_Storch";
КонецПроцедуры

Процедура ЗаписатьДопСведения(Ссылка, Значение, ИмяСвойства, ДобавкаСвойства, СтрокаВнутр = Ложь) Экспорт
	
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(ИмяСвойства+" ("+ДобавкаСвойства+")");
	
	МЗ = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
	МЗ.Объект = Ссылка;
	МЗ.Свойство = Свойство;
	МЗ.Значение = ?(СтрокаВнутр, ЗначениеВСтрокуВнутр(Значение), Значение);
	
	МЗ.Записать();
	
КонецПроцедуры

Функция ПрочитатьДопСведения(Ссылка, ИмяСвойства, ДобавкаСвойства, СтрокаВнутр = Ложь)
	
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(ИмяСвойства+" ("+ДобавкаСвойства+")");
	
	МЗ = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
	МЗ.Объект = Ссылка;
	МЗ.Свойство = Свойство;
	МЗ.Прочитать();
	Если ЗначениеЗаполнено(МЗ.Значение) Тогда
		Значение = ?(СтрокаВнутр, ЗначениеИзСтрокиВнутр(МЗ.Значение), МЗ.Значение);
	Иначе
		Значение = Неопределено;
	КонецЕсли;
	Возврат Значение;	
	
КонецФункции
